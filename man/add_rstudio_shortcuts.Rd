% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_shortcuts.R
\name{add_rstudio_shortcuts}
\alias{add_rstudio_shortcuts}
\alias{example_shortcuts_yaml}
\title{Add Shortcuts to RStudio}
\usage{
add_rstudio_shortcuts(path = NULL)

example_shortcuts_yaml()
}
\arguments{
\item{path}{The path to your \code{.shtrcts.yaml} file. If \code{NULL}, \pkg{shrtcts}
will look in your R or OS home directory (via \code{\link[fs:path_home_r]{fs::path_home_r()}} or
\code{\link[fs:path_home]{fs::path_home()}}). You can set this path via the global option
\code{"shrtcts.path"}.}
}
\description{
Add up to 100 fully configurable shortcuts to RStudio. Store your shortcuts
in \code{.shrtcts.yaml} in your R home or OS home directory. Then add
\code{add_rstudio_shortcuts()} to your \verb{~/.Rprofile} to load the shortcuts when
starting R. Your shortcuts will automatically appear in the Addins window
(if not, try restarting your R session one more time). Your shortcuts can
be arbitrary functions written inline or functions from other packages. You
can set their names and even assign keyboard shortcuts to your shrtcts.
}
\section{Functions}{
\itemize{
\item \code{example_shortcuts_yaml}: An example \code{.shrtcts.yml} file.
}}

\section{YAML format}{
 Use the following template to organize your
\code{.shrtcts.yaml}.\if{html}{\out{<div class="yaml">}}\preformatted{- Name: Say Something Nice
  Description: A demo of cool things
  Binding: praise::praise
  Interactive: true
}\if{html}{\out{</div>}}

This format follows the format used by RStudio in the \code{addins.dcf} file. The
minimum required fields are \code{Name} and \code{Binding}. Use the
\code{example_shortcuts_yaml()} function to see an example YAML file.

Note that unlike the \code{addins.dcf} file format, in \code{.shrtcts.yaml}, the
\code{Binding} field is an R function. If calling a function in another package,
you can simply set to the function name, as in the above example. Otherwise,
you can write your own unnamed function.\if{html}{\out{<div class="yaml">}}\preformatted{- Name: Remind me where I am
  Binding: |
    function() \{
      message("Working directory: ", getwd())
    \}
  Interactive: false
}\if{html}{\out{</div>}}

Note that when \code{Interactive} is \code{false}, no output will be shown unless you
explicitly call a \code{print()} or similar function.

The order of the shortcuts is important. There are 100 "slots" RStudio addins
available in \pkg{shrtcts}. Changing the order of the shortcuts in the YAML
file will change the helper function called by the addin, which will break
keyboard shortcuts if set up. You can specifically set the id of any shortcut
to a number between 1 and 100, to ensure that keyboard shortcuts remain
the same.\preformatted{- Name: Make A Noise
  Binding: beepr::beep()
  id: 42
}
}

\section{RStudio Keyboard Shortcuts}{
 Once you've setup an RStudio Addin via
\pkg{shrtcts}, you can create a keyboard shortcut for the addin using the
\emph{Tools} > \emph{Modify keyboard shortcuts} menu.

If you create a shortcut for an addin via \pkg{shrtcts}, it's a good idea to
set the \code{id} of the shortcut (see the section above).

Keyboard shortcuts persist even if you update the list of shortcuts, but
re-installing the \pkg{shrtcts} package will break any previously-installed
shortcuts. As far as I know, there's no way to save and restore these
shortcuts, so use caution.
}

\examples{
# Add shortcuts to ~/.shrtcts.yaml (see help above)

# Add this to your ~/.Rprofile
if (interactive() & requireNamespace("shrtcts", quietly = TRUE)) {
  shrtcts::add_rstudio_shortcuts()
}

}
